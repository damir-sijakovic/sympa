<style>
.sympa-bulk-actions, .sympa-list-options{
    display:flex;
    align-items: center;
    justify-content: center;
    flex-direction: column; 
    flex-direction: row;
    white-space: nowrap;
}

#sympa-list-titlebar, #sympa-list-bottom-bar{
    font-size: 12px !important;
     font-weight: 500;
     background: #eeeeee;
}


.sympa-toolbar-font{
    font-size: 12px !important;
}

.sympa-list-font{
    font-size: 12px !important;
    font-weight: 500;
}

.sympa-modal{
    background: #3e3e3ed1;
}


.sympa-rotate {
    display: inline-block; 
    transform: rotate(10deg); 
    transition: transform 0.5s; 
}

</style>



<h2>Products</h2>

<hr>

<div class="btn-group" role="group" aria-label="Basic example">
  <a target="_blank" href="/dashboard/product-create" class="btn btn-primary btn-sm"><i class="bi bi-plus-circle mx-1"></i>Create</a>
  <button type="button" class="btn btn-outline-primary btn-sm" onclick="sympa_reset()"> Reset query</button>
</div>

<br><br>

<div id="sympa-no-article-list" class="alert alert-primary" role="alert" style="display:none">
  There is no products!
</div>

<ul id="sympa-article-list" class="list-group mb-3">
          
          <!--
        <li class=
          "list-group-item d-flex justify-content-between">
            <div href="button" class="btn btn-primary btn-sm">Small button</div>
            <strong>20</strong>
          </li>
  
          
          <li class="list-group-item d-flex justify-content-between bg-body-tertiary">
            <div class="">
              <h6 class="my-0">Promo code</h6>
              <small>EXAMPLECODE</small>
            </div>            
            <span class="text-success">
                <div class="btn-group" role="group" aria-label="Basic outlined example">
                  <button type="button" class="btn btn-primary btn-sm">Edit</button>
                  <button type="button" class="btn btn-outline-primary btn-sm">Delete</button>
                </div>            
            </span>
          </li>
          
                    
          <li class=
          "list-group-item d-flex justify-content-between">
            <span>Total:</span>
            <strong id="sympa-total-articles"></strong>
          </li>
          
          -->   
          
         <li class="list-group-item d-flex justify-content-between">
            
        </li> 
 </ul>

<nav aria-label="Page navigation example" id="sympa-pagination">
<!--
  <ul class="pagination">
    <li class="page-item">
      <a class="page-link" href="#" aria-label="Previous">
        <span aria-hidden="true">&laquo;</span>
      </a>
    </li>
    <li class="page-item"><a class="page-link active" href="#">1</a></li>
    <li class="page-item"><a class="page-link" href="#">2</a></li>
    <li class="page-item"><a class="page-link" href="#">3</a></li>
    <li class="page-item">
      <a class="page-link" href="#" aria-label="Next">
        <span aria-hidden="true">&raquo;</span>
      </a>
    </li>
  </ul>
-->
</nav>

<!-- MODALS -->



<div class="modal sympa-modal" id="sympa-delete-bulk-modal" style="display:none;">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Warning!</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="document.getElementById('sympa-delete-bulk-modal').style.display='none'"></button>
      </div>
      <div class="modal-body">
        <p>Do you want to delete selected item(s)?</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="document.getElementById('sympa-delete-bulk-modal').style.display='none'">Cancel</button>
        <button type="button" class="btn btn-danger" onclick="sympa_deleteBulkModalAction()">Delete</button>
      </div>

	<div class="alert alert-warning alert-dismissible fade show" role="alert" style="display:none; margin-bottom: 0;">
	   <span id="sympa-delete-bulk-modal-message"> Hello</span> 
	  <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close" ></button>
	</div>

    </div>
  </div>
</div>


<div class="modal sympa-modal" id="sympa-strip-categories-bulk-modal" style="display:none;">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Warning!</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="document.getElementById('sympa-strip-categories-bulk-modal').style.display='none'"></button>
      </div>
      <div class="modal-body">
        <p>Do you want to remove categories from selected item(s)?</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="document.getElementById('sympa-strip-categories-bulk-modal').style.display='none'">Cancel</button>
        <button type="button" class="btn btn-danger" onclick="sympa_removeCategoriesBulkModalAction()">Remove</button>
      </div>

	<div class="alert alert-warning alert-dismissible fade show" role="alert" style="display:none; margin-bottom: 0;">
	   <span id="sympa-strip-categories-bulk-modal-message"> Hello</span> 
	  <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close" ></button>
	</div>

    </div>
  </div>
</div>




<div class="modal sympa-modal" id="sympa-delete-single-modal" style="display:none;">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Warning!</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="document.getElementById('sympa-delete-single-modal').style.display='none'"></button>
      </div>
      <div class="modal-body">
        <p>Do you want to delete post?</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="document.getElementById('sympa-delete-single-modal').style.display='none'">Cancel</button>
        <button type="button" class="btn btn-danger" onclick="sympa_deleteArticleModalAction()">Delete</button>
      </div>

	<div class="alert alert-warning alert-dismissible fade show" role="alert" style="display:none; margin-bottom: 0;">
	   <span id="sympa-delete-single-modal-message"> Hello</span> 
	  <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close" ></button>
	</div>

    </div>
  </div>
</div>


<div class="modal sympa-modal" id="sympa-list-value-modal" style="display:none;">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Enter value</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="document.getElementById('sympa-list-value-modal').style.display='none'"></button>
      </div>
      <div class="modal-body">
        
      <div class="mb-3">
        <p>Enter search term or category id:</p>
        <input type="text" class="form-control" id="sympa-list-value-modal-input" aria-describedby="">
      </div>

      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="document.getElementById('sympa-list-value-modal').style.display='none'">Cancel</button>
        <button type="button" class="btn btn-primary" onclick="sympa_setListValueAction()">Accept</button>
      </div>

	<div class="alert alert-warning alert-dismissible fade show" role="alert" style="display:none; margin-bottom: 0;">
	   <span id="sympa-list-value-modal-message"> Hello</span> 
	  <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close" ></button>
	</div>

    </div>
  </div>
</div>





<div class="modal sympa-modal" id="sympa-category-modal" style="display:none;">
  <div class="modal-dialog" >
    <div class="modal-content" >
      <div class="modal-header">
        <h5 class="modal-title">Add to category</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="document.getElementById('sympa-category-modal').style.display='none'"></button>
      </div>
      <div class="modal-body" style="height: calc(100vh - 200px) !important; overflow:scroll;">
        
        <div id="sympa-category-loading-modal" class="d-flex justify-content-center align-items-center h-100">
            <div class="spinner-border" role="status">
              <span class="visually-hidden">Loading...</span>
            </div>
       </div>
      
        <ul id="sympa-category-ul-modal" class="list-group" style="display:none;">
          <li class="sympa-category-select-list list-group-item">Empty list</li>
        </ul>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="document.getElementById('sympa-category-modal').style.display='none'">Cancel</button>
        <button type="button" class="btn btn-primary" onclick="sympa_selectCategoryItemAction()">Select</button>
      </div>

	<div class="alert alert-warning alert-dismissible fade show" role="alert" style="display:none; margin-bottom: 0;">
	   <span id="sympa-bulk-delete-modal-message"> Hello</span> 
	  <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close" ></button>
	</div>

    </div>
  </div>
</div>






<script>


// CATEGORY
async function sympa_openCategoryModal(){    
    const _createItem = function(item){
        const name = item.name;
        const id = item.id;
        const slug = item.slug;

        return `<li onclick="sympa_toggleSelectedCategory(this)" 
            class="sympa-category-select-list list-group-item" 
            title="ID: ${id}\nSlug: ${slug}"
            data-id="${id}" data-name="${name}" data-slug="${slug}"
            >${name}</li>`;
    }
    
    document.getElementById("sympa-category-modal").style.display = "block";   
    
    const response = await fetch('/category-get-all?per-page=1000&page=1');
    const jsonData = await response.json();
	
	if (jsonData.error) {
		sympa_message(jsonData.message, 'warning');
	}
    
    if (jsonData.total > 0){        
        document.getElementById("sympa-category-loading-modal").classList.add("d-none");
        document.getElementById("sympa-category-ul-modal").style.display = "block";
        let htmlData = "";
        for (const key in jsonData.categories) {
            htmlData += _createItem(jsonData.categories[key]);
        }
        document.getElementById("sympa-category-ul-modal").innerHTML = htmlData;
    }       
}


function sympa_toggleSelectedCategory(that){
    document.querySelectorAll('.sympa-category-select-list').forEach(element => element.classList.remove('active'));
    that.classList.toggle("active");
    console.log(that);
    const id = that.getAttribute("data-id");
    const name = that.getAttribute("data-name");
    
    localStorage.setItem("sympa-add-to-category-item-name", name);
    localStorage.setItem("sympa-add-to-category-item-id", id);
}


async function sympa_selectCategoryItemAction(){    
        
    let id = localStorage.getItem("sympa-add-to-category-item-id");
    let name = localStorage.getItem("sympa-add-to-category-item-name");    
    let slug = localStorage.getItem("sympa-add-to-category-item-slug");
    
    console.log(" sympa_selectCategoryItemAction ", 
        id,
        name,
        slug
    );
        
    console.log(" sympa_selectCategoryItemAction ", 
            sympa_getSelectedItemIds()
    );
    
    let postData = new FormData();  
    postData.append('article_ids', sympa_getSelectedItemIds());
    postData.append('category_id', id);

    const response = await fetch('/link-article-to-categories', {
        method: 'POST', 
        body: postData,
    });

    const jsonData = await response.json();
    if (response.status != 200) {		
        return null;
    }
    else{
       sympa_message("Article(s) added to list!", "success");
      // setTimeout(function () {
      //      window.location.reload();
      // }, 2000);
    } 
   
  
}



function sympa_getSelectedCategoryIds() {
	let parent = document.getElementById('sympa-selected-categories-list');
	let elements = parent.querySelectorAll('[data-id]');
	let categories = [];

	for (let i = 0; i < elements.length; i++) {
		let element = elements[i];
		let categoryId = element.getAttribute("data-id");
		categories.push(parseInt(categoryId));
	}

    console.log(categories);

	return categories;
}


////////////////


async function sympa_removeCategoriesBulkModalAction(){    
    
    const selectedIds = sympa_getSelectedItemIds();
   
    if (selectedIds.length === 0) {
        document.getElementById("sympa-strip-categories-bulk-modal").style.display = 'none';
        sympa_message("Select items first!", "warning");
        return;
    }    

    console.log(selectedIds);

    let postData = new FormData();  
    postData.append('ids', selectedIds);

    const response = await fetch('/remove-categories-by-ids', {
        method: 'POST', 
        body: postData,
    });

    const jsonData = await response.json();
    if (response.status != 200) {		
        return null;
    }
    else{
       sympa_message("category(s) removed!", "success");
       setTimeout(function () {
            window.location.reload();
       }, 2000);
    } 
     
}


async function sympa_deleteBulkModalAction(){    
    
    const selectedIds = sympa_getSelectedItemIds();
   
    if (selectedIds.length === 0) {
        document.getElementById("sympa-strip-categories-bulk-modal").style.display = 'none';
        sympa_message("Select items first!", "warning");
        return;
    }    

    let postData = new FormData();  
    postData.append('ids', selectedIds);

    const response = await fetch('/article-delete-by-ids', {
        method: 'POST', 
        body: postData,
    });

    const jsonData = await response.json();
    if (response.status != 200) {		
        return null;
    }
    else{
        sympa_message("Item(s) deleted!", "success");
       setTimeout(function () {
            window.location.reload();
       }, 2000);
    }    
}


function sympa_getSelectedItemIds(){
    const elements = document.querySelectorAll('.sympa-bulk-checkbox');
    let selectedIds = [];
    elements.forEach(function(element) {
        if (element.checked){
            const dataId = element.parentElement.parentElement.getAttribute('data-id');
            selectedIds.push(parseInt(dataId)); 
        }
    });
    
    return selectedIds;
}


function sympa_tableCheck(checked){
    if (checked){
        const elements = document.querySelectorAll('.sympa-bulk-checkbox');
        elements.forEach(function(element) {
            console.log(element);
            element.checked = true;
        });
    }
    else{
        const elements = document.querySelectorAll('.sympa-bulk-checkbox');
        elements.forEach(function(element) {
            console.log(element);
            element.checked = false;
        });
    }    
}


function sympa_applyBulk(){
    const bulkMode = localStorage.getItem('sympa-article-list-bulk-mode');
    
    if (bulkMode === 'delete-items'){
        document.getElementById("sympa-delete-bulk-modal").style.display = "block";
    }  
    
    if (bulkMode === 'strip-categories'){
        document.getElementById("sympa-strip-categories-bulk-modal").style.display = "block";
    }  
        
    if (bulkMode === 'add-to-category'){
        sympa_openCategoryModal();
    }     
        
}


function sympa_changeBulkMode(that){
    if (that.value === 'none'){
        localStorage.setItem('sympa-article-list-bulk-mode', 'none');
    }
    if (that.value === 'delete-items'){
        localStorage.setItem('sympa-article-list-bulk-mode', 'delete-items');
    }
    if (that.value === 'strip-categories'){
        localStorage.setItem('sympa-article-list-bulk-mode', 'strip-categories');  
    }
    if (that.value === 'strip-tags'){
        localStorage.setItem('sympa-article-list-bulk-mode', 'strip-tags');  
    }
    if (that.value === 'add-to-category'){
        localStorage.setItem('sympa-article-list-bulk-mode', 'add-to-category'); 
    }
}


function sympa_deleteArticleModal(id){
    let targetElement = document.getElementById("sympa-delete-single-modal");
    targetElement.style.display = "block";
    targetElement.setAttribute("data-id", id);
}


async function sympa_deleteArticleModalAction()
{   
    let targetElement = document.getElementById("sympa-delete-single-modal");
    const id = targetElement.getAttribute("data-id"); 
    
    let postData = new FormData();  
    postData.append('id', id);

    const response = await fetch('/article-delete', {
        method: 'POST', 
        body: postData,
    });

    const jsonData = await response.json();
	if (response.status != 200) {		
		return null;
	}
    else{
        sympa_message("Article deleted!", "success");
        setTimeout(function () {
            window.location.reload();
		}, 2000);
    }
           
    return;
}


function sympa_drawList(data)
{      
    let _createItem = function(x){
       
        let id = x.id;
        let title = x.title;
        let excerpt = x.excerpt;
        let price = x.price;
        let createdAt = x.created_at;
        let modifiedAt = x.modified_at;
        
        return `
        <li class="list-group-item d-flex justify-content-between bg-body-tertiary" title="ID: ${id} \nCreated: ${createdAt} \nModified: ${modifiedAt}" data-id="${id}">
            <div class="d-flex gap-3">                
                <input class="form-check-input sympa-bulk-checkbox" type="checkbox">
                <div>
                    <div style="display: flex;"> <h6 class="my-0"><span style="color:#666; font-size:12px;">${id}.</span> ${title}</h6></div> 
                    <small>${excerpt}</small>
                </div>
            </div>            
            <span class="text-success">
                <div class="btn-group" role="group" aria-label="Basic outlined example">
                  <a href="/product-id/${id}" class="btn btn-primary btn-sm sympa-list-font" target="_blank">View</a>
                  <a href="/dashboard/product-edit/${id}" class="btn btn-primary btn-sm sympa-list-font" target="_blank">Edit</a>
                  <div onclick="sympa_deleteArticleModal(${id})" class="btn btn-outline-primary btn-sm sympa-list-font">Delete</div>
                </div>
                <div style="color:black; font-size:12px; font-weight:600; text-align:right; color:#666;">${modifiedAt}</div>            
            </span>
          </li>
        `;        
    }
    
    let htmlData = `
        <li id="sympa-list-titlebar" class="list-group-item d-flex justify-content-between">             
			<div>
                <div class="sympa-bulk-actions">
                    <div>
                    <input style="margin-right: 1rem;" class="form-check-input" type="checkbox" onclick="sympa_tableCheck(this.checked)">
                    </div>     
                    <select id="sympa-select-bulk-mode" class="form-select sympa-toolbar-font" aria-label="Default select example">
                      <option onclick="sympa_changeBulkMode(this)" value="none" selected>Bulk actions...</option>
                      <!--
                      <option onclick="sympa_changeBulkMode(this)" value="delete-items">Delete items</option>
                      <option onclick="sympa_changeBulkMode(this)" value="strip-categories">Strip categories</option>
                      <option onclick="sympa_changeBulkMode(this)" value="strip-tags">Strip tags</option>
                      <option onclick="sympa_changeBulkMode(this)" value="add-to-category">Add to category</option>
                      -->
                    </select>
                    <div onclick="sympa_applyBulk()" class="btn btn-light btn-sm sympa-toolbar-font">Apply</div>
                </div>                
                
            </div>
			<div class="d-flex">
            
                <button data="" style="display:none" onclick="sympa_openSetListValueModal()" id="sympa-list-value-button" type="button" class="btn btn-light btn-sm sympa-toolbar-font">Enter value...</button>
            
                <div class="sympa-list-options">                    
                    <select id="sympa-select-right-mode" class="form-select sympa-toolbar-font" aria-label="Default select example">
                      <option value="normal" selected onclick="sympa_changeListMode(this)">Normal Mode</option>
                      <option value="search" onclick="sympa_changeListMode(this)">Search Mode</option>
                      <option value="category" onclick="sympa_changeListMode(this)">Category Mode</option>        
                    </select>
                </div>
                
                <div class="sympa-list-options mx-1">                    
                    <select id="sympa-select-right-sort" class="form-select sympa-toolbar-font" aria-label="Default select example">
                      <option selected onclick="sympa_changeListSort(this)" value="newest">Newest</option>
                      <option onclick="sympa_changeListSort(this)" value="oldest">Oldest</option>
                      <option onclick="sympa_changeListSort(this)" value="id-ascending">ID ascending</option>
                      <option onclick="sympa_changeListSort(this)" value="id-descending">ID descending</option>
                    </select>
                </div>
            
            	<div class="sympa-list-options">
                    <select id="sympa-select-right-per-page" class="form-select sympa-toolbar-font" aria-label="Default select example">
                      <option onclick="sympa_changeListPerPage(this)" selected value="10">10 items</option>
                      <option onclick="sympa_changeListPerPage(this)" value="25">25 items</option>
                      <option onclick="sympa_changeListPerPage(this)" value="50">50 items</option>
                    </select>
                    <button onclick="sympa_goAction()" type="button" class="btn btn-light btn-sm sympa-toolbar-font">Go</button>
                </div>  
                              
            </div>
        </li>   
    `;
    
    let listElement = document.getElementById("sympa-article-list");     
    
    for (const key in data.products) {
        htmlData += _createItem(data.products[key]);
    }
    
    htmlData += `
        <li class="list-group-item d-flex justify-content-between" id="sympa-list-bottom-bar">
            <div>Total: <span id="sympa-total-articles"></span> </div>
            <div id="sympa-bottom-right-message">::</div>
        </li> 
        <!--li class="list-group-item d-flex justify-content-between" id="sympa-list-bottom-bar">
            <span>Total:</span>
            <div></div> <span id="sympa-total-articles"></span>
        </li-->   
    `;
    
    listElement.innerHTML = htmlData;
    
    let totalArticlesElement = document.getElementById("sympa-total-articles");
    totalArticlesElement.innerHTML = data.total + ' items(s)';   
}


function sympa_paginate(data){    
    const {
		currentPage,
		firstPage,
		indexOffset,
		indexRowCount,
		itemNumber,
		lastPage,
		nextPage,
		numberOfPages,
		perPage,
		prevPage,
		visibleEndPage,
		visibleStartPage
	} = data;
    
    console.log("debug data: ", data);
    
    let htmlData = `
        <ul class="pagination">    
    `;         
        
	if (currentPage === 1){
		htmlData += `
            <li class="page-item disabled">
            <a class="page-link" href="#" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
            </a>
            </li> 
        `;
	}
	else{
		let prevPage = currentPage-1;
		htmlData += `
            <li class="page-item">
            <a class="page-link" onclick="sympa_repaginate(${prevPage}, ${perPage})" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
            </a>
            </li> 
        `; 
	}
	               
         
   for (let i=visibleStartPage; i<visibleEndPage+1; i++){
		let targetPage = i;
		
		if (i === currentPage){	
			htmlData += `<li class="page-item active"><a class="page-link" onclick="sympa_repaginate(${i}, ${perPage})" >${i}</a></li>`;
		}
		else
		{
			htmlData += `<li class="page-item"><a class="page-link" onclick="sympa_repaginate(${i}, ${perPage})" >${i}</a></li>`;
		}
		
	}     
         
    if (visibleEndPage > currentPage){
		let nextPage = currentPage+1;
		htmlData += `<li class="page-item"><div class="page-link" onclick="sympa_repaginate(${nextPage}, ${perPage})" aria-label=""><span aria-hidden="true">&raquo;</span></div></li>`;
	}
	else{
		htmlData += `<li class="page-item disabled"><div class="page-link" onclick="" aria-label=""><span aria-hidden="true">&raquo;</span></div></li>`;
	}
   

         
    htmlData += `
        </ul>    
    `;
    
    document.getElementById("sympa-pagination").innerHTML = htmlData;
    
}


async function sympa_getArticles(page=1, perPage=3, sort='desc')
{      
    const response = await fetch('/article-get-all?page=' + page + '&per-page=' + perPage + '&sort=' + sort); // /article-get-all
	const jsonData = await response.json();
	if (response.status != 200) {
		console.log('ERROR!');
		return null;
	}
    
    if (!jsonData.articles){
        throw new Error("Missing 'articles' object. Bad json format!");
    }
    
    // console.log( jsonData );    
    // sympa-no-categories-found
    
    return jsonData;
}



async function sympa_repaginate(page, perPage){       
    localStorage.setItem('sympa-article-list-per-page', perPage);
    localStorage.setItem('sympa-article-list-current-page', page);
     
    const data = await sympa_getProductsNew();
    if (data.total === 0){
        document.getElementById("sympa-article-list").style.display = 'none';  
        document.getElementById("sympa-no-article-list").style.display = 'block'; 
        return;         
    }
    
    sympa_drawList(data);	
    sympa_paginate(data.paginateData);
    
 
}


async function sympa_repaginateOld(page=1, perPage=10){       
    localStorage.setItem('sympa-article-list-per-page', perPage);
    localStorage.setItem('sympa-article-list-current-page', page);
     
    const data = await sympa_getProductsNew();
    if (data.total === 0){
        document.getElementById("sympa-article-list").style.display = 'none';  
        document.getElementById("sympa-no-article-list").style.display = 'block'; 
        return;         
    }
    
    sympa_drawList(data);	
    sympa_paginate(data.paginateData);    

}




async function sympa_getProductsNew()
{      
    const sympaViewMode    = localStorage.getItem("sympa-article-list-view-mode"); 
    const sympaPerPage     = localStorage.getItem("sympa-article-list-per-page"); 
    const sympaCurrentPage = localStorage.getItem("sympa-article-list-current-page");        
    const sympaBulkMode    = localStorage.getItem("sympa-article-list-bulk-mode"); 
    const sympaListMessage = localStorage.getItem("sympa-article-list-message"); 
    const sympaSearch      = localStorage.getItem("sympa-article-list-search"); 
    const sympaCategory  = localStorage.getItem("sympa-article-list-category"); 
    const sympaValue = localStorage.getItem("sympa-article-list-value"); 
    const sympaSort = localStorage.getItem("sympa-article-list-sort"); 
    
    let url = '/product-get-all?';  
    
    if (sympaViewMode === 'normal'){
        url += 'page=' + sympaCurrentPage + '&per-page=' + sympaPerPage;         
    }      
    else if (sympaViewMode === 'search'){
        if (sympaValue === ""){
            url += 'page=' + sympaCurrentPage + '&per-page=' + sympaPerPage; 
        }
        else{            
            url += 'page=' + sympaCurrentPage + '&per-page=' + sympaPerPage + '&search=' + sympaValue; 
        }
    }    
    else if (sympaViewMode === 'category'){                
        if (sympaValue === ""){
            url += 'page=' + sympaCurrentPage + '&per-page=' + sympaPerPage; 
        }
        else{   
            
            if (!sympa_isIntegerString(sympaValue)){
               sympa_message("To list category use ID integer!", "warning"); 
                setTimeout(function () {
               //     sympa_reset();  
                }, 2000);
                return;
            }
                                 
            url += 'page=' + sympaCurrentPage + '&per-page=' + sympaPerPage + '&category=' + sympaValue; 
        }
    }
    
    if (sympaSort === 'newest') url += '&sort=' + 'asc';
    if (sympaSort === 'oldest') url += '&sort=' + 'desc';
    if (sympaSort === 'id-ascending') url += '&sort=' + 'id-asc';
    if (sympaSort === 'id-descending') url += '&sort=' + 'id-desc';
        
    const response = await fetch(url); 
	const jsonData = await response.json();
	if (response.status != 200){
		console.log('ERROR!');
		return null;
	}
    
    if (!jsonData.products){
        sympa_message("Missing 'products' object. Bad json format!", "danger");
        throw new Error("Missing 'products' object. Bad json format!");
    }
    
    if (jsonData.total === 0) localStorage.setItem('sympa-article-empty', 'yes');
    
    return jsonData;
}


async function sympa_getArticlesByUrl(url)
{          
    const response = await fetch('/article-get-all?'+url); 
	const jsonData = await response.json();
	if (response.status != 200){
		console.log('ERROR!');
		return null;
	}
    
    if (!jsonData.articles){
        throw new Error("Missing 'articles' object. Bad json format!");
    }
    
    return jsonData;
}




function sympa_postUiRedraw(){
    
    if (localStorage.getItem('sympa-article-empty') !== null) return;
 
    let value = localStorage.getItem('sympa-article-list-per-page');
    if (value) { 
        document.getElementById('sympa-select-right-per-page').value = parseInt(value);
    } 

    value = localStorage.getItem('sympa-article-list-view-mode');
    if (value) { 
        document.getElementById('sympa-select-right-mode').value = value;
        
        const button = document.getElementById("sympa-list-value-button");
        if (value == 'category' || value == 'search') button.style.display = "block";
        const categorySearchValue = localStorage.getItem('sympa-article-list-value');
        
        if (categorySearchValue){
            button.setAttribute('data', categorySearchValue);
            button.innerHTML = categorySearchValue;
        }       
    } 

    value = localStorage.getItem('sympa-article-list-bulk-mode');
    if (value) { 
        document.getElementById('sympa-select-bulk-mode').value = value;
        
    }   
}





async function sympa_initList(){      
    //await sympa_repaginate(1, 10);

    const data = await sympa_getProductsNew();
    if (data.total === 0){
        document.getElementById("sympa-article-list").style.display = 'none';  
        document.getElementById("sympa-no-article-list").style.display = 'block';         
        return;         
    }
    
    sympa_drawList(data);	
    sympa_paginate(data.paginateData);
}


function sympa_setBottomRightMessage(message){
    document.getElementById("sympa-bottom-right-message").innerHTML = message;
}


function sympa_setListValueAction(){
    const value = document.getElementById("sympa-list-value-modal-input").value;
    document.getElementById("sympa-list-value-button").innerHTML = value;
    document.getElementById("sympa-list-value-button").setAttribute('data', value);
    document.getElementById("sympa-list-value-modal").style.display = "none";
    localStorage.setItem('sympa-article-list-value', value);
}

function sympa_openSetListValueModal(){
    document.getElementById("sympa-list-value-modal").style.display = "block";
}


function sympa_changeListMode(that){
    console.log(that);
    if (that.value === 'normal'){
        document.getElementById("sympa-list-value-button").style.display = "none";
        document.getElementById("sympa-list-value-button").innerHTML = "Enter value...";
        localStorage.setItem('sympa-article-list-view-mode', 'normal');
    }
    if (that.value === 'category'){
         document.getElementById("sympa-list-value-button").style.display = "block";
         localStorage.setItem('sympa-article-list-view-mode', 'category');
    }
    if (that.value === 'search'){
        document.getElementById("sympa-list-value-button").style.display = "block";
        localStorage.setItem('sympa-article-list-view-mode', 'search');        
    }
}


function sympa_changeListSort(that){
    if (that.value === 'newest'){
        localStorage.setItem('sympa-article-list-sort', 'newest');
    }
    
    if (that.value === 'oldest'){
        localStorage.setItem('sympa-article-list-sort', 'oldest');
    }
    
    if (that.value === 'id-ascending'){
        localStorage.setItem('sympa-article-list-sort', 'id-ascending');
    }
    
    if (that.value === 'id-descending'){
        localStorage.setItem('sympa-article-list-sort', 'id-descending');
    }  

}


function sympa_changeListPerPage(that){
    if (that.value === '10'){
        localStorage.setItem('sympa-article-list-per-page', '10');
    }
    
    if (that.value === '25'){
        localStorage.setItem('sympa-article-list-per-page', '25');
    }
    
    if (that.value === '50'){
        localStorage.setItem('sympa-article-list-per-page', '50');
    }    
}


function sympa_reset(){
    // Loop through all keys in localStorage
    for (let i = localStorage.length - 1; i >= 0; i--) {
        const key = localStorage.key(i);
        // Check if the key starts with 'sympa-'
        if (key && key.startsWith('sympa-')) {
            localStorage.removeItem(key); // Remove the item
        }
    }
    window.location.reload();
}


async function sympa_goAction(){
    let perPage = localStorage.getItem('sympa-article-list-per-page');
    let currentPage = localStorage.getItem('sympa-article-list-current-page');
    await sympa_repaginate(1, perPage);
    sympa_postUiRedraw();
}



function sympa_initStorageSettings(){  
     
    let value = localStorage.getItem('sympa-article-list-per-page');
    if (value) {   
    } else {
        localStorage.setItem('sympa-article-list-per-page', '10');
    }

    value = localStorage.getItem('sympa-article-list-current-page');
    if (!value) {        
        localStorage.setItem('sympa-article-list-current-page', '1');
    }

    value = localStorage.getItem('sympa-article-list-view-mode');
    if (!value) {        
        localStorage.setItem('sympa-article-list-view-mode', 'normal');
    }

    value = localStorage.getItem('sympa-article-list-bulk-mode');
    if (!value) {        
        localStorage.setItem('sympa-article-list-bulk-mode', 'none');
    }

    value = localStorage.getItem('sympa-article-list-message');
    if (!value) {        
        localStorage.setItem('sympa-article-list-message', '');
    }

    value = localStorage.getItem('sympa-article-list-search');
    if (!value) {        
        localStorage.setItem('sympa-article-list-search', '');
    }

    value = localStorage.getItem('sympa-article-list-category');
    if (!value) {        
        localStorage.setItem('sympa-article-list-category', '');
    }

    value = localStorage.getItem('sympa-article-list-sort');
    if (!value) {        
        localStorage.setItem('sympa-article-list-sort', 'newest');
    }

    value = localStorage.getItem('sympa-article-list-value');
    if (!value) {        
        localStorage.setItem('sympa-article-list-value', '');
    }
        
    value = localStorage.getItem('sympa-article-empty');
    if (value) {        
        localStorage.removeItem('sympa-article-empty');
    }    
}


//MAIN
window.addEventListener("load", async function(){
    sympa_initStorageSettings();
    // await sympa_getProductsNew();
    // await sympa_getArticlesByUrl("page=1&perPage=10&category=1");
    await sympa_initList();
    sympa_postUiRedraw();    
});

</script>




